#include <stdio.h>
#include <string.h>

int findChar(char * str, char c) // search character c in the string str
{
  int i,l;
  l = strlen(str);// the length
    for (i=0;i<l;i = i+1)
       {
       if (str[i] == c)
         return i; //position
       }

         return -1;

 }
int replaceChar(char *str, char c1, char c2)//search for the character c1 in the str and if found, replace it with c2
{
    int i;
    int count = 0;
    int l = strlen(str);

    for (i=0; i<l; i = i+1)
    {
        if (str[i] == c1)
        {
            str[i] = c2;
            count = count +1;
        }
    return count;//number of replacements
    }
    return 0;
}

int isPalindrome(char *str)//checks to see if a string is Palindrome
{
	int length;
	int i;


	length = strlen(str);//calculate length

    for(i=0; i<length; i = i+1)
	{
		if((str[0+i] != str[(length-1)-i]))
		{
			return 0;

		}
	}
	return 1;
}

void swap(char *a, char *b)//swap function
{
    char c;
    c = *a;
    *a = *b;
    *b = c;
}
int reverseString(char * str)//reverse string
{
  int l,i;
  l=strlen(str);
    for (i=0;i<(l/2);i = i +1)
     {
       swap(&str[i],&str[l-i-1]);

     }
  return l;
}

int removeChar(char * str1, char * str2, char c)//copy str1 into str2 except the character c and replace '*'
{
  int l;
  char t = '*';
  int i;


  l = strlen(str1);
  strcpy(str2,str1);


    	for(i = 0; i<l; i = i+1)
	       {
		      if(str2[i] == c)
	      	{
			      str2[i] = t;
	       	}
	}

 return 1;

}


int main()
{
char arv[10] = "Hello";
char arv1[10];


   printf("Find in position %d\n\n",findChar(arv,'e'));

   replaceChar(arv,'H', 'o');

   printf("Replace: %s\n\n",arv);


     removeChar(arv, arv1, 'l');
   printf("New char:%s\n\n",arv1);

  if(isPalindrome(arv))
		printf("%s is a palindrome string\n",arv);
	else
		printf("%s is not a palindrome string\n",arv);

   reverseString(arv);
	 printf("The word reversed is: %s  \n", arv);
   printf("\nthe number of characters in that string: %d\n", reverseString(arv));




return 0;


}

